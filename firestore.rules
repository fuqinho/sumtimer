rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

  	function isAuthenticated(userId) {
    	return request.auth != null && userId == request.auth.uid;
    }

  	match /users/{userId} {
    	allow get: if isAuthenticated(userId);
      allow update: if isAuthenticated(userId);
    }

    match /categories/{categoryId} {
    	allow read: if isAuthenticated(resource.data.uid);
      allow create: if isAuthenticated(request.resource.data.uid);
      allow update: if isAuthenticated(resource.data.uid) || isAuthenticated(request.resource.data.uid);
      allow delete: if isAuthenticated(resource.data.uid);
    }

    match /activities/{activityId} {
    	allow read: if isAuthenticated(resource.data.uid);

      allow create: if isAuthenticated(request.resource.data.uid);
      allow update: if isAuthenticated(resource.data.uid) || isAuthenticated(request.resource.data.uid);
      allow delete: if isAuthenticated(resource.data.uid);
    }

    match /records/{recordId} {
    	allow read: if isAuthenticated(resource.data.uid);
      allow create: if isAuthenticated(request.resource.data.uid);
      allow update: if isAuthenticated(resource.data.uid) || isAuthenticated(request.resource.data.uid);
      allow delete: if isAuthenticated(resource.data.uid);
  	}

    match /ongoings/{userId} {
    	allow read: if isAuthenticated(userId);
      allow write: if isAuthenticated(userId);
    }
  }
}
